name: "Deploy branch"
description: 'Deploy docker image of branch to namespace with an ingress based on branch name'
inputs:
  ecr-url:
    description: "ECR endpoint url"
    required: true
  kube-cert:
    description: "Kubernetes cluster authentication certificate"
    required: true
  kube-token:
    description: "Kubernetes cluster authentication token"
    required: true
  kube-cluster:
    description: "Kubernetes cluster name"
    required: true
  kube-namespace:
    description: "Kubernetes cluster namespace"
    required: true
  app-environment:
    description: "environment to which the app is being deployed [staging, production, etc]"
    required: true

outputs:
  branch-name:
    description: "Extracted branch name"
    value: ${{ steps.extract_branch.outputs.branch_name }}
  release-name:
    description: "Extracted release name"
    value: ${{ steps.extract_release.outputs.release_name }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Extract branch name
      id: extract_branch
      shell: bash
      run: |
        if [ $GITHUB_EVENT_NAME == "pull_request" ]
        then
          branch=$GITHUB_HEAD_REF
        else
          branch=${GITHUB_REF#refs/heads/}
        fi
        echo "branch_name=$branch" >> $GITHUB_OUTPUT

    - name: Extract release name
      id: extract_release
      shell: bash
      run: |
        branch_name=${{ steps.extract_branch.outputs.branch_name }}
        truncated_branch=$(echo $branch_name | tr '[:upper:]' '[:lower:]' | sed 's:^\w*\/::' | tr -s ' _/[]().' '-' | cut -c1-30 | sed 's/-$//')
        echo "release_name=${truncated_branch}" >> $GITHUB_OUTPUT

    - name: Authenticate to the cluster
      shell: bash
      env:
        KUBE_CERT: ${{ inputs.kube-cert }}
        KUBE_TOKEN: ${{ inputs.kube-token }}
        KUBE_CLUSTER: ${{ inputs.kube-cluster }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
      run: |
        echo "${KUBE_CERT}" > ca.crt
        kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
        kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
        kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
        kubectl config use-context ${KUBE_CLUSTER}

    - name: Helm deployment of branch
      shell: bash
      env:
        ECR_URL: ${{ inputs.ecr-url }}
        GIT_SHA: ${{ github.sha }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
        VALUES_FILE: .helm/assure-hmrc-data/values/${{ inputs.app-environment }}.yaml
        RELEASE_NAME: ${{ steps.extract_release.outputs.release_name }}
      run: |
        ingress_name="assure-hmrc-data"
        release_host="$RELEASE_NAME-$KUBE_NAMESPACE.cloud-platform.service.justice.gov.uk"
        identifier="$RELEASE_NAME-$ingress_name-$KUBE_NAMESPACE-green"

        echo "Deploying commit: $GIT_SHA under release name: '$RELEASE_NAME' to '$release_host'..."

        helm upgrade $RELEASE_NAME .helm/assure-hmrc-data \
          --namespace ${KUBE_NAMESPACE} \
          --set image.repository="${ECR_URL}" \
          --set image.tag="${GIT_SHA}" \
          --set ingress.annotations."external-dns\.alpha\.kubernetes\.io/set-identifier"="$identifier" \
          --set ingress.hosts="{$release_host}" \
          --set branch_builder.database_name=$RELEASE_NAME \
          --set branch_builder.omniauth_azure_redirect_uri="https://${release_host}/users/auth/azure_ad/callback" \
          --values ${VALUES_FILE} \
          --install \
          --wait
