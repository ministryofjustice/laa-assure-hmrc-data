name: "Deploy"
description: 'Deploy docker image to namespace'
inputs:
  ecr-url:
    description: "ECR endpoint url"
    required: true
  kube-cert:
    description: "Kubernetes cluster authentication certificate"
    required: true
  kube-token:
    description: "Kubernetes cluster authentication token"
    required: true
  kube-cluster:
    description: "Kubernetes cluster name"
    required: true
  kube-namespace:
    description: "Kubernetes cluster namespace"
    required: true
  app-environment:
    description: "environment to which the app is being deployed [staging, production, etc]"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Authenticate to the cluster
      shell: bash
      env:
        KUBE_CERT: ${{ inputs.kube-cert }}
        KUBE_TOKEN: ${{ inputs.kube-token }}
        KUBE_CLUSTER: ${{ inputs.kube-cluster }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
      run: |
        echo "${KUBE_CERT}" > ca.crt
        kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
        kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
        kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
        kubectl config use-context ${KUBE_CLUSTER}

    - name: Helm deployment
      shell: bash
      env:
        ECR_URL: ${{ inputs.ecr-url }}
        GIT_SHA: ${{ github.sha }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
        VALUES_FILE: .helm/assure-hmrc-data/values/${{ inputs.app-environment }}.yaml
      run: |
        helm upgrade assure-hmrc-data .helm/assure-hmrc-data \
          --namespace ${KUBE_NAMESPACE} \
          --set image.repository="${ECR_URL}" \
          --set image.tag="${GIT_SHA}" \
          --values ${VALUES_FILE} \
          --install \
          --wait
